x3 <- X.3[, j]
likeli.3[j, ] <- sapply(t, function(l) mylikeli.exponential(l, x3))
}
# Plot likelihoods
plot(t, likeli.3[1, ], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0, max(likeli.3)))
for (j in 2:10) {
lines(t, likeli.3[j, ], lwd = 2, col = j)
}
# Plot likelihoods
plot(t, likeli.3[1, ], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0, max(likeli.3)))
for (j in 2:5) {
lines(t, likeli.3[j, ], lwd = 2, col = j)
}
grid(col = 3)
# Plot log-likelihoods
plot(t, log(likeli.3[1, ]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1, ylim = c(-20, 0))
for (j in 2:10) {
lines(t, log(likeli.3[j, ]), lwd = 2, col = j)
}
# Plot log-likelihoods
plot(t, log(likeli.3[1, ]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1, ylim = c(-20, 0))
for (j in 2:5) {
lines(t, log(likeli.3[j, ]), lwd = 2, col = j)
}
# Plot log-likelihoods
plot(t, log(likeli.3[1, ]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1)
for (j in 2:5) {
lines(t, log(likeli.3[j, ]), lwd = 2, col = j)
}
# Plot log-likelihoods
plot(t, log(likeli.3[1, ]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1, ylim = c(-40, -5))
# Plot log-likelihoods
plot(t, log(likeli.3[1, ]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1, ylim = c(-40, -5))
for (j in 2:5) {
lines(t, log(likeli.3[j, ]), lwd = 2, col = j)
}
X.3
# Generate 10 random samples from exponential distribution
set.seed(321)
X.3 <- matrix(rexp(50), nrow = 10)
# Generate 10 random samples from exponential distribution
set.seed(321)
X.3 <- matrix(rexp(50), nrow = 10)
# Calculate likelihoods for the 10 random samples
likeli.3 <- matrix(NA, nrow = ncol(X.3), ncol = length(t))
for (j in 1:ncol(X.3)) {
x3 <- X.3[, j]
likeli.3[j, ] <- sapply(t, function(l) mylikeli.exponential(l, x3))
}
# Plot likelihoods
plot(t, likeli.3[1, ], xlab = 'lambda', ylab = 'likelihood', type = 'l', lwd = 2, col = 1, ylim = c(0, max(likeli.3)))
for (j in 2:5) {
lines(t, likeli.3[j, ], lwd = 2, col = j)
}
grid(col = 3)
# Plot log-likelihoods
plot(t, log(likeli.3[1, ]), xlab = 'lambda', ylab = 'log-likelihood', type = 'l', lwd = 2, col = 1, ylim = c(-40, -5))
for (j in 2:5) {
lines(t, log(likeli.3[j, ]), lwd = 2, col = j)
}
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Import the data
flight_data <- read.csv("Flight_Delays.csv")
# Import the data
flight_data <- read.csv("data/Flight_Delays.csv")
setwd("C:/Users/treyr")
setwd("C:/Users/treyr/Documents/TUP/Prototype-1")
reticulate::repl_python()
reticulate::repl_python()
library(readr)
Regional_Giving_Data_IRS_eo1 <- read_csv("data/Regional Giving Data IRS eo1.csv")
View(Regional_Giving_Data_IRS_eo1)
knitr::opts_chunk$set(echo = TRUE)
suppressMessages(library(tidyverse))
```{r, warning=FALSE}
```{r, warnings=FALSE}
suppressMessages(library(tidyr))
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(tidyr))
suppressMessages(library(tidyverse))
# Load Data
# Load Data
Reg_giv_df <- read_csv("data/Regional Giving Data IRS eo1.csv")
View(Reg_giv_df)
remove(Regional_Giving_Data_IRS_eo1)
colnames(Reg_giv_df)
tabble(Reg_giv_df$CLASSIFICATION)
table(Reg_giv_df$CLASSIFICATION)
library(readxl)
Interviews <- read_excel("data/Interviews.xlsx")
View(Interviews)
Interviews <- read_excel("data/Interviews.xlsx")
View(Interviews)
# Rename columns 7 to 11
colnames(Interviews)[7:11] <- paste0("Q", 1:5)
ggplot(Interviews, aes(Q1)) + geom_boxplot()
ggplot(Interviews, aes(Q1)) + geom_bar()
ggplot(Interviews, aes(Q2)) + geom_bar()
ggplot(Interviews, aes(Q4))
ggplot(Interviews, aes(Q3))
ggplot(Interviews, aes(Q3)) + geom_bar
ggplot(Interviews, aes(Q3)) + geom_bar()
ggplot(Interviews, aes(Q4)) + geom_bar()
ggplot(Interviews, aes(Q5)) + geom_bar()
ggplot(Interviews, aes(Q2, fill = Q1)) + geom_bar()
ggplot(Interviews, aes(Q2, fill = Q1)) + geom_bar(stat = "identity", position = position_dodge())
ggplot(Interviews, aes(Q2, fill = Q1)) + geom_bar(position = position_dodge())
Inter_q2 <- na.omit(Interviews$Q2)
Inter_q2 <- na.omit(Interviews[,c(Q1,Q2)])
Inter_q2 <- na.omit(Interviews[,c("Q1","Q2")])
ggplot(Inter_q2, aes(Q2, fill = Q1)) + geom_bar(position = position_dodge())
ggplot(Inter_q2, aes(Q2, fill = Q1)) + geom_bar(col = 'black', position = position_dodge()) +
```
ggplot(Inter_q2, aes(Q2, fill = Q1)) + geom_bar(col = 'black', position = position_dodge())
ggplot(Inter_q2, aes(Q2, fill = Q1)) + geom_bar(col = 'black', position = position_dodge()) + theme_classic()
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold")
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold")
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold")
legend.text = element_text(size = 10) # Adjust legend text size
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10) # Adjust legend text size
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 7) # Adjust legend text size
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 3) # Adjust legend text size
)
10
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold"),
legend.text = element_text(size = 10) # Adjust legend text size
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 6),
legend.text = element_text(size = 10) # Adjust legend text size
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 8)
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 10)
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Efficiency of Current Funding Processes",
x = "Perception of Efficiency",
y = "Count",
fill = "Funding Source"
) +
theme_classic() +
theme(
title = element_text(size = 16, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = "Do you believe that the current funding processes of corporate and philanthropic giving officers are efficient?",
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you believe that the current funding processes of corporate and philanthropic giving officers are efficient?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black') +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you believe that the current funding processes of corporate and philanthropic giving officers are efficient?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q2, aes(x = Q2, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you believe that the current funding processes of corporate and philanthropic giving officers are efficient?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
ggplot(Interviews, aes(Q1, fill = Q1)) + geom_bar()
# Create the bar plot
ggplot(Inter_q3, aes(x = Q3, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you think the current process for distributing funding earmarked for social justice topics is transparent and reliable?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
Inter_q3 <- na.omit(Interviews[,c("Q1","Q3")])
# Create the bar plot
ggplot(Inter_q3, aes(x = Q3, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you think the current process for distributing funding earmarked for social justice topics is transparent and reliable?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q3, aes(x = Q4, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you think the current process for distributing funding earmarked for social justice topics is transparent and reliable?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create Dataset
Inter_q4 <- na.omit(Interviews[,c("Q1","Q4")])
# Create the bar plot
ggplot(Inter_q3, aes(x = Q4, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you think the current process for distributing funding earmarked for social justice topics is transparent and reliable?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q4, aes(x = Q4, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you think the current process for distributing funding earmarked for social justice topics is transparent and reliable?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create Dataset
Inter_q5 <- na.omit(Interviews[,c("Q1","Q5")])
# Create the bar plot
ggplot(Inter_q5, aes(x = Q5, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Do you think the current process for distributing funding earmarked for social justice topics is transparent and reliable?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
# Create the bar plot
ggplot(Inter_q5, aes(x = Q5, fill = Q1)) +
geom_bar(col = 'black', position = position_dodge(width = 0.8), width = 0.7) +
scale_fill_brewer(palette = "Set1") + # Change color palette
labs(
title = str_wrap("Would you be interested in establishing more transparent relationships with community groups and finance organizations?", width = 60),
x = "Answer",
y = "Count",
fill = "Sector"
) +
theme_classic() +
theme(
title = element_text(size = 13, face = "bold"),
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "top", # Position the legend at the top
legend.title = element_text(face = "bold", size = 12)
)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
install.packages('dplyr')
install.packages('tidyr')
install.packages('tidyverse'
)
install.packages('janitor')

---
title: "Nonprofit Story"
author: "Trey Roark"
format: 
  html:
    toc: true
    toc-title: "Table of Contents"
    embed-resources: true
    warnings: false
    code-fold: true
execute:
  echo: false
---

# Overview

Through analysis already done by Trey Roark and Amelia Baier with the data at the IRS, we'll create a summary of what we believe to be the most important metrics and statistics of interest that we'd like to include in our dashboard. Additionally, we'll visualize these metrics and expand upon how we best believe they can be used to help our use cases.  

This will include both the data itself, as well as different ways to visualize a lot of these metrics, so our dashboard will contain a nice pipeline that will end up being easy to use.

For more information on the data and it's preprocessing, please look here: <https://theundivideproject.github.io/Philanthropic-Giving-Analysis.github.io/>


```{python}
# Loading Libraries and Data
# Libraries for data manipulation
import pandas as pd
import numpy as np

# Libraries for data vis
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.io as pio

# Libraries for quarto rending
from IPython.display import Markdown,display
from tabulate import tabulate
import plotly.io as pio

# Remove warnings
import warnings
warnings.filterwarnings("ignore", category=UserWarning)

# Read in data
df_reg_giv_irs_eo1 = pd.read_csv('data/Updated Regional Giving Data IRS eo1.csv')

# Standardize col names
df_reg_giv_irs_eo1.columns = [x.lower() for x in df_reg_giv_irs_eo1.columns]

# Replace zeros with NaN for appropriate columns
df_reg_giv_irs_eo1['ruling'] = df_reg_giv_irs_eo1['ruling'].replace(0, np.nan)

# Replace NaN with appropriate values accordingly
df_reg_giv_irs_eo1['ntee_cd'] = df_reg_giv_irs_eo1['ntee_cd'].fillna('Z') # Z stands for unknown according to data documentation.

# Convert columns to appropriate data types
date_cols = ['ruling','tax_period']
for col in date_cols:
    df_reg_giv_irs_eo1[col] = df_reg_giv_irs_eo1[col].astype(str).str.replace(r'\.0$', '', regex=True)
    df_reg_giv_irs_eo1[col] = pd.to_datetime(df_reg_giv_irs_eo1[col], format='%Y%m', errors='coerce')
```


# EOMBF Findings

Looking at the Exempt Organizations Business Master File (EO BMF), which is pulled from the Internal Revenue Service's Business Master File, provides some features that can be used for a detailed analysis of philanthropic giving, particular within the environmental and social justice sectors. 

Right now, we're just looking specifically at the Northeast (inclusive of Connecticut, Maine, Massachusetts, New Hampshire, New Jersey, New York, Rhode Island, Vermont). This data can be found here <https://www.irs.gov/charities-non-profits/exempt-organizations-business-master-file-extract-eo-bmf>

## Preliminary Statistics (Subject to Change)

```{python}
len(df_reg_giv_irs_eo1)
```

As of 10/14/2024 in the Northeast quadrant, there are currently 266,754 tax exempt organizations, logged through the IRS' database. 


## Temporal Display of Tax Exempt Organizations

In the figure below, we can see the timeline of organizations receiving their tax exempt status. First, there's been quite an increase in these organizations in the past 10 years. 

```{python}
# Make data copy
ruling_df = df_reg_giv_irs_eo1.copy() 

# Calculate percentage of zeros in RULING col
pct_of_zeros = ruling_df['ruling'].value_counts().get(0, 0) / ruling_df.shape[0]
#print(f"{pct_of_zeros:.2%}")

# Aggregate data annually
annual_counts = ruling_df.groupby(pd.Grouper(key='ruling', freq='Y')).size()  # 'Y' is fine here, just ensure correct usage

# Apply rolling window of 5 years to smooth the data
rolling_counts = annual_counts.rolling(window=5, center=True).mean()

# Plot
plt.figure(figsize=(9, 5))
annual_counts.plot(alpha=0.5, label='Annual Counts')  # Original data
rolling_counts.plot(color='red', label='5-Year Rolling Average')  # Smoothed data
plt.title('Number of Exempt Organizations Over Time (According to Ruling Date)')
plt.xlabel('Ruling Date (Year)')
plt.ylabel('Number of EINs')
plt.legend()
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()
```



## Geographic Display of our Tax Exempt Organizations

We can see a representation of these organization's headquarters by count in each state below. (For potential regional focuses and gaps in support identification)


```{python}
#| label: fig-geo
#| fig-cap: "Geographic Analysis of Northeast Exempt Organizations"

# Write line to show plotly in quarto rendering
pio.renderers.default = "plotly_mimetype+notebook_connected"

# Take value counts of orgs by state
state_cts = df_reg_giv_irs_eo1['state'].value_counts().reset_index()
state_cts.columns = ['state','counts']
state_cts['formatted_counts'] = state_cts['counts'].apply(lambda x: f"{x:,.0f}")

# Build map
fig = px.choropleth(state_cts, locations='state', locationmode='USA-states', color='counts',
                    color_continuous_scale='Viridis', scope='usa',
                    title='Number of Exempt Organizations by State')

fig.update_traces(hovertemplate='State: %{location}<br>Count: %{customdata[0]}<extra></extra>',
                  customdata=state_cts[['formatted_counts']].values)

fig.update_layout(coloraxis_colorbar=dict(title='Organization Count'))

fig.show()
```



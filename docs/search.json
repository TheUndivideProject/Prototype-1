[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Philanthropic Giving to EJ-Communities (Prototype 1)",
    "section": "",
    "text": "This website aims to provide insights into philanthropic spending related to environmental causes by analyzing SEC and IRS data. The goal is to make philanthropic giving data more accessible and understandable, identify the sources of funding, and reveal where and to whom these funds are being directed. This information will be compiled into a dashboard tool to aid donors, communities, and policymakers in making informed decisions about environmental giving.\nTransparency is our number one goal. Although current data is accessible via the SEC and IRS, the breadth and depth of this data makes it extremely difficult for those at large without much data science experience to analyze accountability of how philanthropic giving operates in cities of interest and whether this philanthropic giving is reported. This guts the ideal of a feedback loop between the donors that are giving, and the impacted communities that are supposed to receive assistance.\nThus, our objective is to reestablish this feedback loop between communities and philanthropic giving officers, ensuring that the perspectives and leadership of community members are at the forefront of all funding decisions.\nThis will start as comparative analysis of Corporations and Nonprofits. This will be done through documents provided by the Securities and Exchange Commission (SEC) and the IRS (through their Business Master File and Form 990s). More information on these will be provided in their respective analyses. As a result, it will lay the foundation for trend analysis, and where we project this giving to be in the future.\nUtlimately, this will operate as a multi-faceted tool that combines education, transparency, and decision-making. Through the education of communities at large, we can find accoutnability and decision-making for government agencies involved not only to make sure impacted communities are served, but to hold those accountable for their philanthropic giving. This innovative dashboard will serve as a convenient platform for direct verification of funding impacts, empowering communities to track and assess the resources flowing into their areas."
  },
  {
    "objectID": "index.html#mission-statement-story",
    "href": "index.html#mission-statement-story",
    "title": "Philanthropic Giving to EJ-Communities (Prototype 1)",
    "section": "",
    "text": "This website aims to provide insights into philanthropic spending related to environmental causes by analyzing SEC and IRS data. The goal is to make philanthropic giving data more accessible and understandable, identify the sources of funding, and reveal where and to whom these funds are being directed. This information will be compiled into a dashboard tool to aid donors, communities, and policymakers in making informed decisions about environmental giving.\nTransparency is our number one goal. Although current data is accessible via the SEC and IRS, the breadth and depth of this data makes it extremely difficult for those at large without much data science experience to analyze accountability of how philanthropic giving operates in cities of interest and whether this philanthropic giving is reported. This guts the ideal of a feedback loop between the donors that are giving, and the impacted communities that are supposed to receive assistance.\nThus, our objective is to reestablish this feedback loop between communities and philanthropic giving officers, ensuring that the perspectives and leadership of community members are at the forefront of all funding decisions.\nThis will start as comparative analysis of Corporations and Nonprofits. This will be done through documents provided by the Securities and Exchange Commission (SEC) and the IRS (through their Business Master File and Form 990s). More information on these will be provided in their respective analyses. As a result, it will lay the foundation for trend analysis, and where we project this giving to be in the future.\nUtlimately, this will operate as a multi-faceted tool that combines education, transparency, and decision-making. Through the education of communities at large, we can find accoutnability and decision-making for government agencies involved not only to make sure impacted communities are served, but to hold those accountable for their philanthropic giving. This innovative dashboard will serve as a convenient platform for direct verification of funding impacts, empowering communities to track and assess the resources flowing into their areas."
  },
  {
    "objectID": "index.html#website-structureguide",
    "href": "index.html#website-structureguide",
    "title": "Philanthropic Giving to EJ-Communities (Prototype 1)",
    "section": "Website Structure/Guide",
    "text": "Website Structure/Guide\n\nCorporate: documents insights from financial and philanthropic metrics from the Securities and Exchange Commission (SEC) financial statements of public companies.\nNonprofit: documents insights from financial and philanthropic metrics from the IRS Exempt Organizations Business Master File and Form 990 filings of tax-exempt organizations.\nComparative Analysis: This page will highlight a comparative analysis of the individual work done on the Corporate and Nonprofit level. It will provide both a holistic view of how philanthropic giving operates at different granularities, and be the starting point for our dashboard."
  },
  {
    "objectID": "nonprofit.html",
    "href": "nonprofit.html",
    "title": "Nonprofit Story",
    "section": "",
    "text": "Through analysis already done by Trey Roark and Amelia Baier with the data at the IRS, we’ll create a summary of what we believe to be the most important metrics and statistics of interest that we’d like to include in our dashboard. Additionally, we’ll visualize these metrics and expand upon how we best believe they can be used to help our use cases.\nThis will include both the data itself, as well as different ways to visualize a lot of these metrics, so our dashboard will contain a nice pipeline that will end up being easy to use.\nFor more information on the data and it’s preprocessing, please look here: https://theundivideproject.github.io/Philanthropic-Giving-Analysis.github.io/"
  },
  {
    "objectID": "corporate.html",
    "href": "corporate.html",
    "title": "Corporate",
    "section": "",
    "text": "Like we’re doing for the nonprofit sector, we’ll put together a summary of the important metrics and statistics we think should be included in our dashboard, based on our analysis of SEC data from the corporate sector.\nThis will include both the data itself and some options for visualizing it.\nWe’re working with two main SEC datasets:\nFor a deeper dive into these datasets and links to access them directly, check out this page: https://theundivideproject.github.io/Financial-Data-Exploration/website/index.html\nCode\n# libraries for data manipulation\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\n\n# libraries for data visualisation\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\nimport plotly.io as pio\n\n# libraries for quarto rendering\nfrom IPython.display import Markdown,display\n\n# remove warnings\nimport warnings\nwarnings.filterwarnings(\"ignore\", category=UserWarning)\n\nimport pandas as pd\n\n# read in data from 'sub.csv' in the 'data' folder, excluding international companies\nsub_data = pd.read_csv('./data/sub.csv')\nsub_data = sub_data[sub_data['BA COUNTRY'] == 'US'] \n\n# read in data from 'num.csv' in the 'data' folder\nnum_data = pd.read_csv('./data/num.csv')\n\n# global color cycle\nplt.rcParams['axes.prop_cycle'] = plt.cycler(color=['#d9f0a3', '#a6d96a', '#66c2a5', '#3288bd', '#4575b4', '#313695', '#f7fcb9'])"
  },
  {
    "objectID": "corporate.html#transparency-accountability",
    "href": "corporate.html#transparency-accountability",
    "title": "Corporate",
    "section": "Transparency & Accountability",
<<<<<<< Updated upstream
    "text": "Transparency & Accountability\n\nAre companies meeting the required detail levels in their financial statement submissions?\nThe SEC uses a Boolean value to indicate if a company’s financial statements meet their ‘required detail’ level. It’s tough to give a clear definition of what that level looks like because it varies from company-to-company, but general guidelines can be found here: AICPA Principles and Criteria for XBRL Formatted Information. Submission detail can give insight into whether a company maintains high corporate governance standards and offers complete information to market stakeholders.\n\nPercentage of U.S. Submissions Containing Required Detail:\n\n\nCode\n# calculate count of \"CONTAINS REQUIRED DETAIL\"\ndetail_sums = (sub_data['CONTAINS REQUIRED DETAIL'] == 1).sum()\nprint(detail_sums)\n\n\n5131\n\n\n\n\nCode\n# calculate percentages of \"CONTAINS REQUIRED DETAIL\"\ndetail_percentage = (detail_sums / len(sub_data)) * 100\nno_detail_percentage = 100 - detail_percentage\n\nlabels = ['Contain Required Detail', 'DO NOT Contain Required Detail']\npercentages = [detail_percentage, no_detail_percentage]\n\n# create figure\nfig, axs = plt.subplots(1, 2, figsize=(12, 6))\n\n# bar chart\naxs[0].bar(labels, percentages)\naxs[0].set_title(\"Percentage of U.S. Submissions Containing Required Detail\")\naxs[0].set_ylabel(\"Percentage\")\naxs[0].set_ylim(0, 100)\n\n# add text labels on top of each bar\nfor i, v in enumerate(percentages):\n    axs[0].text(i, v + 2, f\"{v:.1f}%\", ha='center', fontweight='bold')\n\n# pie chart\naxs[1].pie(\n    percentages,\n    labels=labels,\n    autopct='%1.1f%%',\n    startangle=90,\n    wedgeprops={'edgecolor': 'white'}\n)\naxs[1].set_title(\"Percentage of U.S. Submissions Containing Required Detail\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nCode\n# percentage of submissions containing required detail by state (heatmap)\n\n# calculate sum and count of \"CONTAINS REQUIRED DETAIL\" by state\nstate_detail_sums = sub_data.groupby('BA STATE')['CONTAINS REQUIRED DETAIL'].agg(['sum', 'count']).reset_index()\n\n# rename columns to uppercase\nstate_detail_sums.columns = ['BA STATE', 'COUNT CONTAINING REQUIRED DETAIL', 'TOTAL COUNT']\n\n# calculate percentage and store it in new column\nstate_detail_sums['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL'] = round( (state_detail_sums['COUNT CONTAINING REQUIRED DETAIL'] / state_detail_sums['TOTAL COUNT']) * 100, 1)\n\n# create choropleth heatmap with custom formatting\nfig = px.choropleth(\n    state_detail_sums,\n    locations='BA STATE',\n    locationmode=\"USA-states\",\n    color='PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL',\n    color_continuous_scale=\"YlGnBu\",\n    scope=\"usa\",\n    labels={'PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL': 'Percentage with Required Detail'},\n    title=\"Percentage of State Submissions Containing Required Detail\"\n)\n\nfig.update_layout(\n    title_font_size=20,\n    geo=dict(\n        lakecolor='rgb(255, 255, 255)',  \n        bgcolor='rgba(0,0,0,0)',         \n        showlakes=True,\n    ),\n    coloraxis_colorbar=dict(\n        title=\"Percentage\",\n        title_font_size=16,\n        tickfont_size=14,\n        lenmode=\"fraction\",\n        len=0.75,   \n        yanchor=\"middle\",\n        y=0.5\n    ),\n    margin=dict(l=50, r=50, t=50, b=50)  \n)\n\n# show figure\nfig.show()\n\n\n                                                \n\n\n\n\n10 States with the Lowest Percentage of Submissions Containing Required Detail:\n\n\nCode\nlowest_state_detail_percentages = state_detail_sums.nsmallest(10, 'PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL')\n\n# create figure\nfig, axs = plt.subplots(1, 2, figsize=(16, 6))\n\n# bar chart\naxs[0].bar(lowest_state_detail_percentages['BA STATE'], lowest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL'])\naxs[0].set_title(\"10 States with the Lowest Percentage of Submissions Containing Required Detail\")\naxs[0].set_ylabel(\"Percentage\")\naxs[0].set_xlabel(\"States\")\naxs[0].set_ylim(0, 30)  \nfor i, v in enumerate(lowest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL']):\n    axs[0].text(i, v + 1, f\"{v}%\", ha='center', fontweight='bold')\n\n# horizontal bar chart\naxs[1].barh(lowest_state_detail_percentages['BA STATE'], \n             lowest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL'])  \naxs[1].set_title(\"10 States with the Lowest Percentage of Submissions Containing Required Detail\")\naxs[1].set_xlabel(\"Percentage\")\naxs[1].set_ylabel(\"States\")\naxs[1].set_xlim(0, 30)\nfor i, v in enumerate(lowest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL']):\n    axs[1].text(v + 1, i, f\"{v}%\", va='center', fontweight='bold')\n\n# show figure\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\n10 States with the Highest Percentage of Submissions Containing Required Detail:\n\n\nCode\nhighest_state_detail_percentages = state_detail_sums.nlargest(10, 'PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL')\n\n# create figure\nfig, axs = plt.subplots(1, 2, figsize=(16, 6))\n\n# bar chart\naxs[0].bar(highest_state_detail_percentages['BA STATE'], highest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL'])\naxs[0].set_title(\"10 States with the Highest Percentage of Submissions Containing Required Detail\")\naxs[0].set_ylabel(\"Percentage\")\naxs[0].set_xlabel(\"State\")\naxs[0].set_ylim(0, 40)  \nfor i, v in enumerate(highest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL']):\n    axs[0].text(i, v + 1, f\"{v}%\", ha='center', fontweight='bold')\n\n# horizontal bar chart\naxs[1].barh(highest_state_detail_percentages['BA STATE'], \n             highest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL'])  \naxs[1].set_title(\"10 States with the Highest Percentage of Submissions Containing Required Detail\")\naxs[1].set_xlabel(\"Percentage\")\naxs[1].set_ylabel(\"State\")\naxs[1].set_xlim(0, 40)\nfor i, v in enumerate(highest_state_detail_percentages['PERCENTAGE OF STATE CONTAINING REQUIRED DETAIL']):\n    axs[1].text(v + 1, i, f\"{v}%\", va='center', fontweight='bold')\n\n# show figure\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nPercentage of Region Submissions Containing Required Detail:\n\nNortheast: CT, ME, MA, NH, NH, NY, RI, VT\nMid-Atlantic and Great Lakes: DE, DC, IL, IN, IA, KY, MD, MI, MN, NE, NC, ND, OH, PA, SC, SD, VA, WV, WI\nGulf Coast and Pacific Coast: AL, AK, AR, AZ, CA, CO, FL, GA, HI, ID, KS, LA, MS, MO, MT, NV, NM, OK, OR, TX, TN, UT, WA, WY\n\n\n\nCode\n# define regions and their corresponding states\nregions = {\n    'Northeast': ['CT', 'ME', 'MA', 'NH', 'NJ', 'NY', 'RI', 'VT'],\n    'Mid-Atlantic and Great Lakes': ['DE', 'DC', 'IL', 'IN', 'IA', 'KY', 'MD', 'MI', 'MN', 'NE', 'NC', 'ND', 'OH', 'PA', 'SC', 'SD', 'VA', 'WV', 'WI'],\n    'Gulf Coast and Pacific Coast': ['AL', 'AK', 'AR', 'AZ', 'CA', 'CO', 'FL', 'GA', 'HI', 'ID', 'KS', 'LA', 'MS', 'MO', 'MT', 'NV', 'NM', 'OK', 'OR', 'TX', 'TN', 'UT', 'WA', 'WY'],\n}\n\n# function to find the region for a given state\ndef find_region(state):\n    for region, states in regions.items():\n        if state in states:\n            return region\n\n# add 'BA REGION' column based on 'BA STATE'\nsub_data['BA REGION'] = sub_data['BA STATE'].apply(find_region)\n\n# aggregate counts and calculate the percentage of required detail by region\nregion_detail_sums = sub_data.groupby('BA REGION')['CONTAINS REQUIRED DETAIL'].agg(['sum', 'count']).reset_index()\n# rename columns to uppercase\nregion_detail_sums.columns = ['BA REGION', 'COUNT CONTAINING REQUIRED DETAIL', 'TOTAL COUNT']\n\n# calculate percentage and store it in new column\nregion_detail_sums['PERCENTAGE OF REGION CONTAINING REQUIRED DETAIL'] = round( (region_detail_sums['COUNT CONTAINING REQUIRED DETAIL'] / region_detail_sums['TOTAL COUNT']) * 100, 1)\n\n# create figure\nfig, axs = plt.subplots(1, 3, figsize=(24, 6))\n\n# bar chart\naxs[0].bar(region_detail_sums['BA REGION'], region_detail_sums['PERCENTAGE OF REGION CONTAINING REQUIRED DETAIL'])\naxs[0].set_title(\"Percentage of Region Submissions Containing Required Detail\")\naxs[0].set_ylabel(\"Percentage\")\naxs[0].set_xlabel(\"Region\")\naxs[0].set_ylim(0, 40)  \nfor i, v in enumerate(region_detail_sums['PERCENTAGE OF REGION CONTAINING REQUIRED DETAIL']):\n    axs[0].text(i, v + 1, f\"{v}%\", ha='center', fontweight='bold')\n\n# horizontal bar chart\naxs[1].barh(region_detail_sums['BA REGION'], \n             region_detail_sums['PERCENTAGE OF REGION CONTAINING REQUIRED DETAIL'])  \naxs[1].set_title(\"Percentage of Region Submissions Containing Required Detail\")\naxs[1].set_xlabel(\"Percentage\")\naxs[1].set_ylabel(\"Region\")\naxs[1].set_xlim(0, 40)\nfor i, v in enumerate(region_detail_sums['PERCENTAGE OF REGION CONTAINING REQUIRED DETAIL']):\n    axs[1].text(v + 1, i, f\"{v}%\", va='center', fontweight='bold')\n    \n# pie chart\naxs[2].pie(region_detail_sums['PERCENTAGE OF REGION CONTAINING REQUIRED DETAIL'], labels=region_detail_sums['BA REGION'], autopct='%1.1f%%', startangle=90, wedgeprops={'edgecolor': 'white'})\nplt.title(\"Percentage of U.S. Submissions Containing Required Detail\")\n\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\n\n\n\nAre environmental-specific companies meeting the required detail levels in their financial statement submissions?\nStandard Industrial Classification (SIC) codes categorize industries based on their business activities. I used these codes to identify companies in environmental sectors. Although this approach is not the most reliable method for determining philanthropic giving patterns, we will assume these companies support environmental causes for the purposes of these visualizations.\n\nPercentage of Environmental-Specific Submissions Containing Required Detail:\n\n\nCode\nsic_categories = {\n    'Agriculture': [100, 200, 900],\n    'Forestry': [800],\n    'Mining': [1400],\n    'Energy': [1311, 1381, 1389, 4900, 4911],\n    'Construction': [1623],\n    'Water Management': [4941],\n    'Waste Management': [4950, 4953, 4955]\n}\n\n# map SIC codes to categories\nsub_data['INDUSTRY'] = sub_data['CLASSIFICATION'].apply(\n    lambda x: next((category for category, codes in sic_categories.items() if x in codes), 'Other')\n)\n\n# aggregate counts and calculate the percentage of required detail by industry\nclassification_detail_sums = sub_data.groupby('INDUSTRY')['CONTAINS REQUIRED DETAIL'].agg(['sum', 'count']).reset_index()\nclassification_detail_sums.columns = ['INDUSTRY', 'COUNT CONTAINING REQUIRED DETAIL', 'TOTAL COUNT']\n\n# calculate percentage and store it in new column\nclassification_detail_sums['PERCENTAGE OF CATEGORY CONTAINING REQUIRED DETAIL'] = round(\n    (classification_detail_sums['COUNT CONTAINING REQUIRED DETAIL'] / classification_detail_sums['TOTAL COUNT']) * 100, 1\n)\n\n# create figure\nfig, axs = plt.subplots(1, 3, figsize=(36, 6))\n\n# bar chart\naxs[0].bar(classification_detail_sums['INDUSTRY'], classification_detail_sums['PERCENTAGE OF CATEGORY CONTAINING REQUIRED DETAIL'])\naxs[0].set_title(\"Percentage of Environmental-Specific Submissions Containing Required Detail\")\naxs[0].set_ylabel(\"Percentage\")\naxs[0].set_xlabel(\"Industry\")\naxs[0].set_ylim(0, 40)  \nfor i, v in enumerate(classification_detail_sums['PERCENTAGE OF CATEGORY CONTAINING REQUIRED DETAIL']):\n    axs[0].text(i, v + 1, f\"{v}%\", ha='center', fontweight='bold')\n\n# horizontal bar chart\naxs[1].barh(classification_detail_sums['INDUSTRY'], \n             classification_detail_sums['PERCENTAGE OF CATEGORY CONTAINING REQUIRED DETAIL'])  \naxs[1].set_title(\"Percentage of Environmental-Specific Submissions Containing Required Detail\")\naxs[1].set_xlabel(\"Percentage\")\naxs[1].set_ylabel(\"Industry Categories\")\naxs[1].set_xlim(0, 40)\nfor i, v in enumerate(classification_detail_sums['PERCENTAGE OF CATEGORY CONTAINING REQUIRED DETAIL']):\n    axs[1].text(v + 1, i, f\"{v}%\", va='center', fontweight='bold')\n\n# pie chart\naxs[2].pie(classification_detail_sums['PERCENTAGE OF CATEGORY CONTAINING REQUIRED DETAIL'], \n           labels=classification_detail_sums['INDUSTRY'], autopct='%1.1f%%', startangle=90, wedgeprops={'edgecolor': 'white'})\nplt.title(\"Percentage of U.S. Submissions Containing Required Detail\")\n\nplt.tight_layout()\nplt.show()"
=======
    "text": "Transparency & Accountability\n\nAre companies meeting the required detail levels in their financial statement submissions?\nThe SEC uses a Boolean value to indicate if a company’s financial statements meet their ‘required detail’ level. It’s tough to give a clear definition of what that level looks like because it varies from company-to-company, but general guidelines can be found here: AICPA Principles and Criteria for XBRL Formatted Information. Submission detail can give insight into whether a company maintains high corporate governance standards and offers complete information to market stakeholders.\n\nTotal Number of U.S. Submissions Containing Required Detail:\n\n\n5131\n\n\n\n\nPercentage of U.S. Submissions Containing Required Detail:\n\n\n22.9\n\n\n\n\n\n\n\n\n\n\n\n\n\n10 States with the Lowest Percentage of Submissions Containing Required Detail:\n\n\n\n\n\n\n\n\n\nState\nNumber of Submissions Containing Required Detail\nTotal Submissions\nPercentage Containing Required Detail\n\n\n\n\n32\nNM\n3\n26\n11.5\n\n\n16\nKS\n17\n121\n14.0\n\n\n0\nAK\n1\n6\n16.7\n\n\n26\nMT\n7\n37\n18.9\n\n\n15\nIN\n60\n316\n19.0\n\n\n8\nDE\n32\n167\n19.2\n\n\n7\nDC\n14\n70\n20.0\n\n\n21\nME\n5\n25\n20.0\n\n\n6\nCT\n100\n492\n20.3\n\n\n40\nSC\n16\n78\n20.5\n\n\n\n\n\n\n\n\n\n10 States with the Highest Percentage of Submissions Containing Required Detail:\n\n\n\n\n\n\n\n\n\nState\nNumber of Submissions Containing Required Detail\nTotal Submissions\nPercentage Containing Required Detail\n\n\n\n\n13\nID\n21\n60\n35.0\n\n\n46\nVT\n5\n16\n31.2\n\n\n25\nMS\n9\n30\n30.0\n\n\n41\nSD\n9\n31\n29.0\n\n\n49\nWV\n9\n32\n28.1\n\n\n33\nNV\n125\n447\n28.0\n\n\n1\nAL\n22\n79\n27.8\n\n\n28\nND\n10\n36\n27.8\n\n\n23\nMN\n102\n373\n27.3\n\n\n18\nLA\n23\n85\n27.1\n\n\n\n\n\n\n\n\n\nPercentage of Submissions Containing Required Detail by Region:\n\nNortheast: CT, ME, MA, NH, NH, NY, RI, VT\nMid-Atlantic and Great Lakes: DE, DC, IL, IN, IA, KY, MD, MI, MN, NE, NC, ND, OH, PA, SC, SD, VA, WV, WI\nGulf Coast and Pacific Coast: AL, AK, AR, AZ, CA, CO, FL, GA, HI, ID, KS, LA, MS, MO, MT, NV, NM, OK, OR, TX, TN, UT, WA, WY\n\n\n\n\n\n\n\n\n\n\nRegion\nNumber of Submissions Containing Required Detail\nTotal Submissions\nPercentage Containing Required Detail\n\n\n\n\n0\nGulf Coast and Pacific Coast\n2624\n11206\n23.4\n\n\n1\nMid-Atlantic and Great Lakes\n1271\n5600\n22.7\n\n\n2\nNortheast\n1231\n5586\n22.0"
>>>>>>> Stashed changes
  },
  {
    "objectID": "nonprofit.html#preliminary-statistics-subject-to-change",
    "href": "nonprofit.html#preliminary-statistics-subject-to-change",
    "title": "Nonprofit Story",
    "section": "Preliminary Statistics (Subject to Change)",
    "text": "Preliminary Statistics (Subject to Change)\n\n\n266754\n\n\nAs of 10/14/2024 in the Northeast quadrant, there are currently 266,754 tax exempt organizations, logged through the IRS’ database."
  },
  {
    "objectID": "nonprofit.html#temporal-display-of-tax-exempt-organizations",
    "href": "nonprofit.html#temporal-display-of-tax-exempt-organizations",
    "title": "Nonprofit Story",
    "section": "Temporal Display of Tax Exempt Organizations",
<<<<<<< Updated upstream
    "text": "Temporal Display of Tax Exempt Organizations\nIn the figure below, we can see the timeline of organizations receiving their tax exempt status. First, there’s been quite an increase in these organizations in the past 10 years.\n\n\n/var/folders/mf/t575ds7d6mn9c1g7dpfyg7w00000gn/T/ipykernel_3062/1129261207.py:5: FutureWarning:\n\nSeries.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n\n/var/folders/mf/t575ds7d6mn9c1g7dpfyg7w00000gn/T/ipykernel_3062/1129261207.py:9: FutureWarning:\n\n'Y' is deprecated and will be removed in a future version, please use 'YE' instead."
=======
    "text": "Temporal Display of Tax Exempt Organizations\nIn the figure below, we can see the timeline of organizations receiving their tax exempt status. First, there’s been quite an increase in these organizations in the past 10 years.\n\n\nC:\\Users\\treyr\\AppData\\Local\\Temp\\ipykernel_2208\\1129261207.py:5: FutureWarning:\n\nSeries.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n\nC:\\Users\\treyr\\AppData\\Local\\Temp\\ipykernel_2208\\1129261207.py:9: FutureWarning:\n\n'Y' is deprecated and will be removed in a future version, please use 'YE' instead."
>>>>>>> Stashed changes
  },
  {
    "objectID": "nonprofit.html#geographic-display-of-our-tax-exempt-organizations",
    "href": "nonprofit.html#geographic-display-of-our-tax-exempt-organizations",
    "title": "Nonprofit Story",
    "section": "Geographic Display of our Tax Exempt Organizations",
    "text": "Geographic Display of our Tax Exempt Organizations\nWe can see a representation of these organization’s headquarters by count in each state below. (For potential regional focuses and gaps in support identification)\n\n\n\n\n                                                \n\n\nFigure 1: Geographic Analysis of Northeast Exempt Organizations"
<<<<<<< Updated upstream
=======
  },
  {
    "objectID": "nonprofit.html#look-at-the-dashboard-above-we-gain-a-couple-of-insights",
    "href": "nonprofit.html#look-at-the-dashboard-above-we-gain-a-couple-of-insights",
    "title": "Nonprofit Story",
    "section": "Look at the dashboard above we gain a couple of insights:",
    "text": "Look at the dashboard above we gain a couple of insights:"
>>>>>>> Stashed changes
  }
]